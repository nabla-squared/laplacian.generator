plugins {
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id 'application'
}

group = 'laplacian'
version = '1.0.0'

repositories {
    maven {
        url '../../../maven-repo/'
    }
    maven {
        url 'https://raw.github.com/nabla-squared/maven-repo/master/'
    }
    mavenCentral()
}

dependencies {
    implementation 'laplacian:laplacian-generator-api:1.0.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.2'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.11.2'
    implementation 'com.networknt:json-schema-validator:1.0.39'
    implementation 'net.sourceforge.plantuml:plantuml:1.2020.20'
    implementation 'com.github.ajalt.clikt:clikt:3.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "$jvmTargetVersion"
    }
}

test {
    useJUnitPlatform()
}

application {
    mainClass = 'laplacian.cli.LaplacianKt'
    applicationDefaultJvmArgs = ['-Djava.awt.headless=true', '--add-opens=java.base/java.util=ALL-UNNAMED']
}

distributions {
    main {
        distributionBaseName = 'laplacian-generator-cli'
    }
}

distTar {
    compression = Compression.GZIP
    archiveExtension = "tar.gz"
}

startScripts {
    applicationName = 'laplacian'
    defaultJvmOpts = ['-Djava.awt.headless=true', '--add-opens=java.base/java.util=ALL-UNNAMED']
}
